[gd_scene load_steps=9 format=2]

[ext_resource path="res://MeshInstance.gd" type="Script" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
uniform sampler2D noise;
uniform float height_scale = 0.5;
uniform sampler2D normalmap;
varying vec2 vertex_position;
render_mode specular_toon;

float height(vec2 position, float time) {
  vec2 offset = 0.01 * cos(position + time);
  return texture(noise, (position / 10.0) - offset).x;
}
void vertex() {
	vertex_position = VERTEX.xz;
	float k = height(vertex_position, TIME);
	VERTEX.y = k;
	NORMAL = normalize(vec3(k - height(vertex_position + vec2(0.1, 0.0), TIME), 0.1, k - height(vertex_position + vec2(0.0, 0.1), TIME)));
}
void fragment(){
	NORMALMAP = texture(normalmap, vertex_position).xyz;
	float fresnel = sqrt(1.0 - dot(NORMAL, VIEW));
	RIM = 0.2;
	METALLIC = 0.0;
	ROUGHNESS = 0.01 * (1.0 - fresnel);
	ALBEDO = vec3(0.1, 0.3, 0.5) + (0.1 * fresnel);
	
	
}"

[sub_resource type="OpenSimplexNoise" id=2]
period = 158.9

[sub_resource type="NoiseTexture" id=3]
seamless = true
noise = SubResource( 2 )

[sub_resource type="OpenSimplexNoise" id=4]
period = 32.9
persistence = 0.27
lacunarity = 2.33

[sub_resource type="NoiseTexture" id=5]
seamless = true
as_normalmap = true
bump_strength = 7.6
noise = SubResource( 4 )

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 1 )
shader_param/height_scale = 0.5
shader_param/noise = SubResource( 3 )
shader_param/normalmap = SubResource( 5 )

[sub_resource type="PlaneMesh" id=7]
material = SubResource( 6 )
subdivide_width = 32
subdivide_depth = 32

[node name="MeshInstance" type="MeshInstance"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.0108287, 0 )
mesh = SubResource( 7 )
material/0 = null
script = ExtResource( 1 )

[node name="OmniLight" type="OmniLight" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.883838, 0 )
