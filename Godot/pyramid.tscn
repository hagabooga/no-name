[gd_scene load_steps=6 format=2]

[ext_resource path="res://sprites/gravel128.png" type="Texture" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode skip_vertex_transform;
uniform sampler2D normalmap;
uniform float pixelSize;
uniform sampler2D albedo_texture : hint_albedo;
uniform vec4 color : hint_color;
varying vec4 vertex_coord;
varying vec2 vertex_position;
void vertex(){
	float width = VIEWPORT_SIZE.x;
	float height = VIEWPORT_SIZE.y;
	float ps = pixelSize;
	if (ps <= 0.0){ ps = 1.0; }
	else if (ps >= 10.0) { ps = 10.0; }

	float pw = width / ps;
	float ph = height / ps;
	vec4 P = (MODELVIEW_MATRIX * vec4(VERTEX, 1.0)).xyzw;
	vec4 snap = (MODELVIEW_MATRIX * vec4(VERTEX, 1.0)).xyzw;
	VERTEX = snap.xyz;
	VERTEX.xyz = snap.xyz / snap.w;
	VERTEX.x = floor(pw * VERTEX.x) / pw;
	VERTEX.y = floor(ph * VERTEX.y) / ph;
	VERTEX.xyz *= snap.w;
	vertex_coord = vec4(UV * VERTEX.z, VERTEX.z, 0.0);
	vertex_position = VERTEX.xz;
}

void fragment(){
	vec4 tex = texture(albedo_texture, vertex_coord.xy / vertex_coord.z);
	NORMALMAP = texture(normalmap, vertex_coord.xy / vertex_coord.z).xyz;
	ALBEDO = tex.rgb * color.rgb;
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/pixelSize = 5.0
shader_param/color = Color( 1, 1, 1, 1 )
shader_param/albedo_texture = ExtResource( 1 )

[sub_resource type="PrismMesh" id=3]
material = SubResource( 2 )

[sub_resource type="BoxShape" id=4]

[node name="RigidBody" type="RigidBody"]

[node name="MeshInstance" type="MeshInstance" parent="."]
mesh = SubResource( 3 )
material/0 = null

[node name="CollisionShape" type="CollisionShape" parent="."]
shape = SubResource( 4 )
